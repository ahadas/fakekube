package fakekube.io.openapi.api;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import com.google.gson.Gson;
import com.google.gson.JsonObject;

import fakekube.io.utils.ResourceReader;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

/**
 * Kubernetes
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 */
@Path("/")
@Api(value = "/", description = "")
public class OpenapiApi  {

    @GET
    @Path("/openapi/")
    @Consumes({ "application/json", "application/yaml", "application/vnd.kubernetes.protobuf" })
    @Produces({ "application/json", "application/yaml", "application/vnd.kubernetes.protobuf" })
    @ApiOperation(value = "", tags={ "admissionregistration" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = String.class),
        @ApiResponse(code = 401, message = "Unauthorized") })
    public Response getPaths() {
    	String str = "{\n" + 
    			"  \"paths\": [\n" + 
    			"    \"/apis\",\n" + 
    			"    \"/apis/\",\n" + 
    			"    \"/apis/apiextensions.k8s.io\",\n" + 
    			"    \"/apis/apiextensions.k8s.io/v1beta1\",\n" + 
    			"    \"/healthz\",\n" + 
    			"    \"/healthz/etcd\",\n" + 
    			"    \"/healthz/log\",\n" + 
    			"    \"/healthz/ping\",\n" + 
    			"    \"/healthz/poststarthook/generic-apiserver-start-informers\",\n" + 
    			"    \"/healthz/poststarthook/start-apiextensions-controllers\",\n" + 
    			"    \"/healthz/poststarthook/start-apiextensions-informers\",\n" + 
    			"    \"/metrics\",\n" + 
    			"    \"/openapi/v2\",\n" + 
    			"    \"/swagger-2.0.0.json\",\n" + 
    			"    \"/swagger-2.0.0.pb-v1\",\n" + 
    			"    \"/swagger-2.0.0.pb-v1.gz\",\n" + 
    			"    \"/swagger.json\",\n" + 
    			"    \"/swaggerapi\",\n" + 
    			"    \"/version\"\n" + 
    			"  ]\n" + 
    			"}\n" + 
    			"";
    	return Response.ok(str).build();
    }

    @GET
    @Path("/openapi/v2/")
    @Consumes({ "application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/com.github.proto-openapi.spec.v2@v1.0+protobuf" })
    @Produces({ "application/json", "application/yaml", "application/vnd.kubernetes.protobuf", "application/com.github.proto-openapi.spec.v2@v1.0+protobuf" })
    @ApiOperation(value = "", tags={ "admissionregistration" })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = JsonObject.class),
        @ApiResponse(code = 401, message = "Unauthorized") })
    public Response getV2() {
    	String str = new ResourceReader().read("openapi.json");
    	JsonObject obj = new Gson().fromJson(str, JsonObject.class);
    	return Response.ok(obj).type(MediaType.APPLICATION_OCTET_STREAM).build();
    }
}

